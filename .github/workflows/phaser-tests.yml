name: Phaser Scene Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  # Smoke Tests - Quick validation for PRs
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Run smoke tests
      run: npm run test:smoke
      
    - name: Upload smoke test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: smoke-test-results
        path: test-results/

  # Full Test Suite - Comprehensive testing
  full-tests:
    name: Full Test Suite
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'schedule'
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Run Phaser tests
      run: npm run test:phaser:ci
      env:
        BROWSER: ${{ matrix.browser }}
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.browser }}
        path: test-results/
        
    - name: Upload test report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-report-${{ matrix.browser }}
        path: playwright-report/

  # Performance Tests - Monitor performance regressions
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Run performance tests
      run: npm run test:performance
      
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-test-results
        path: test-results/

  # Accessibility Tests - Ensure accessibility compliance
  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Run accessibility tests
      run: npm run test:accessibility
      
    - name: Upload accessibility results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-test-results
        path: test-results/

  # Error Handling Tests - Validate error recovery
  error-handling-tests:
    name: Error Handling Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Run error handling tests
      run: npm run test:error-handling
      
    - name: Upload error handling results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: error-handling-test-results
        path: test-results/

  # Build and Deploy - Production deployment
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [smoke-tests, full-tests, performance-tests, accessibility-tests, error-handling-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist

  # Test Summary - Generate test summary
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    if: always()
    needs: [smoke-tests, full-tests, performance-tests, accessibility-tests, error-handling-tests]
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Generate test summary
      run: |
        echo "# Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "## Test Categories" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Smoke Tests: ${{ needs.smoke-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Full Tests: ${{ needs.full-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Performance Tests: ${{ needs.performance-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Accessibility Tests: ${{ needs.accessibility-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Error Handling Tests: ${{ needs.error-handling-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Test Artifacts" >> $GITHUB_STEP_SUMMARY
        echo "Test results and reports are available in the artifacts section." >> $GITHUB_STEP_SUMMARY
